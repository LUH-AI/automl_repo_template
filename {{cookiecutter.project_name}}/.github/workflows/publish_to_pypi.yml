name: Publish Python Package

on:
  # Manually triggerable in github
  workflow_dispatch:
  
  # Once you've tested the setup, you can use the this event to trigger the workflow whenever a new release is created:
  #release:
  #  types: [created]

jobs:
  test:
    name: tests

    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash # Default to using bash on all

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: {{ cookiecutter.python_version }}

    - name: Install {% raw %}${{ env.package-name }}{% endraw %}
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel
        python -m pip install -e {% raw %}".${{ env.extra-requires }}"{% endraw %}

    - name: Store git status
      id: status-before
      shell: bash
      run: |
        echo {% raw %}"::set-output name=BEFORE::$(git status --porcelain -b)"{% endraw %}

    - name: Tests
      run: |
        pytest {% raw %}${{ env.pytest-args }} ${{ env.test-dir }}{% endraw %}

    - name: Check for files left behind by test
      run: |
        {% raw %}before="${{ steps.status-before.outputs.BEFORE }}"{% endraw %}
        after="$(git status --porcelain -b)"
        if [[ "$before" != "$after" ]]; then
            echo "git status from before: $before"
            echo "git status from after: $after"
            echo "Not all generated files have been deleted!"
            exit 1
        fi

  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/carl-bench
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: python -m build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: {% raw %}${{ secrets.pypi_api_token }}{% endraw %}